import React, {useEffect, useState} from "react";
import {Element, scroller} from "react-scroll";
import Image from "react-bootstrap/Image";
import Spinner from "react-bootstrap/Spinner";
import Button from "react-bootstrap/Button";
import GenerateImage from "../api/openAiApi";
import Form from "react-bootstrap/Form";
/*
import FormControl from "react-bootstrap/FormControl";
import FormLabel from "react-bootstrap/FormLabel";
*/

const AssistImage = (prompt = '') => {
  const [imageSize, setImageSize] = useState(350);
  const [spinner, setSpinner] = useState(false);
  const [imagePrompt, setImagePrompt] = useState(prompt);
  const [imageUrl, setImageUrl] = useState(null);

  useEffect(() => {
    
  }, [imagePrompt]);
  
  const scrollToImage = () => {
    scroller.scrollTo('ImageUrl', {
      duration: 500, delay: 0, smooth: 'easeInOutQuart'
    });
  };

  const handleImageSize = (event) => {
    const size = event.target.value;
    setImageSize(size);
  }

  const getImageUrl = async () => {
    setSpinner(true);
    if (!imagePrompt) return null;
    const url = await GenerateImage(imagePrompt);
    console.log('image url:', url);
    if (imageUrl) {
      await setImageUrl(url);
      scrollToImage();
    }
  }

  return (
    <React.Fragment>
      <Form>
        <Element id={'ImageUrl'}>
          {prompt && imageUrl &&
            <Image src={prompt || ''}
                   alt="Generated by OpenAI"
                   width={imageSize}
                   className={'my-24'}
            />}
        </Element>
        <Form.Label title={'ImageSize'}  column={0}>Image Size:
          <Form.Control
            onChange={handleImageSize}
            style={{width: '75px', marginLeft: '15px'}}
            type="number"
            as={'input'}
            id="number-input"
            placeholder="350"
          />
        </Form.Label>
        {imagePrompt}
        {prompt && imageUrl && (
          <Button id={'imageUrl'}
                  className={'mr-2'}
                  variant='secondary'
                  onClick={async (e) => {
                    await getImageUrl()
                    await scrollToImage();
                  }}
          >
            Generate Image
          </Button>
        )
          
        } 
      </Form>
      <Spinner animation="border" role="status" hidden={!spinner}/>
    </React.Fragment>
  )
}

export default AssistImage;