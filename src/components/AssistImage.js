import React, {useEffect, useState} from "react";
import {Element, scroller} from "react-scroll";
import {Image} from "react-bootstrap";
import Button from "react-bootstrap/Button";
import Alert from "react-bootstrap/Alert";
import GenerateImage from "../api/openAiApi";

const AssistImage = ({setSpinner}) => {
  const [imageUrl, setImageUrl] = useState(null);
  const [imageSize, setImageSize] = useState(350);

  const scrollToImage = () => {
    scroller.scrollTo('ImageUrl', {
      duration: 500, delay: 0, smooth: 'easeInOutQuart'
    });
  };

  const handleImageSize = (event) => {
    const size = event.target.value;
    setImageSize(size);
  }

  const getImageUrl = async () => {
    setSpinner(true);
    const imageUrl = await GenerateImage(question);
    console.log('image url:', imageUrl);
    if (imageUrl) {
      await setImageUrl(imageUrl);
      /*
            setCode('');
      */
    }
    setSpinner(false);
  }

  function clearImage() {
    setImageUrl(null);
  }

  return (
    <form>
        {imageUrl && (
          <Alert className={'m-2'}>
            {imageUrl}
          </Alert>)
        }
        <Element id={'ImageUrl'}>
          {imageUrl &&
            <Image src={imageUrl || ''}
                   alt="Generated by OpenAI"
                   width={imageSize}
                   className={'my-24'}
            />}
        </Element>
        <label htmlFor="number-input">Image Size:
          <input
            onChange={handleImageSize}
            style={{width: '75px', marginLeft: '15px'}}
            type="number"
            id="number-input"
            placeholder="350"
          />
        </label>
        <Button id={'imageUrl'}
                className={'mr-2'}
                variant='secondary'
                onClick={async (e) => {
                  await getImageUrl(e)
                  await scrollToImage();
                }}
        >
          Generate Image
        </Button>
    </form>
  )
}

export default AssistImage;